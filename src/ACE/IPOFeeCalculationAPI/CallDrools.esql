PATH uk.gov.ipo.common,uk.gov.ipo.logging, uk.gov.ipo.exception,uk.gov.ipo.utilities;
/* ------------------------------------------------------------------------------------------------------------------------------------
        Program Details:
        ---------------
 		This interface is Common building block - 'Fee Calculation' Service. It builds the request to Drools application, handles,transforms the response 
 		and routes the same to the requested application.
 ---------------------------------------------------------------------------------------------------------------------------------------*/
DECLARE UDP_URL EXTERNAL CHARACTER '';

CREATE COMPUTE MODULE CallDrools_BuildRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		-- Variable and Reference declarations
		DECLARE inRef REFERENCE TO InputRoot;
		DECLARE outRef,outDataRef,outFeeCalcRef REFERENCE TO OutputRoot;
		
		-- Copies the entire message
		CALL CopyEntireMessage();

		MOVE outFeeCalcRef TO outRef.JSON.Data.feeCalculation.Item; 
		
		-- Update the 'Datetime' element, if it is empty. 		
		IF (NOT hasText(outFeeCalcRef.dateTime)) THEN
			SET outFeeCalcRef.dateTime	 = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ss.SSS');
		END IF;	 
		
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL			= UDP_URL;
		SET OutputLocalEnvironment.Destination.HTTP.RequestLine.Method	= 'POST';
		
		RETURN TRUE;
	END;
	
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE CallDrools_BuildErrorResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Variable and Reference declarations
		DECLARE hTTPReplyHeaderRef	REFERENCE TO InputLocalEnvironment;

		
	   IF InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code" = 200 THEN
			-- Copy response to Environment
			CALL debug(Environment,'ReceivedResponse:****** with HTTP Status Code '||CAST(InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code" AS CHARACTER)); 
			CALL debug(Environment,'Received Payload:******  '||CAST(ASBITSTREAM(InputBody) AS CHAR CCSID COALESCE(InputRoot.Properties.CodedCharSetId,1208))); 
		 
		 	CALL CopyEntireMessage();
		 	RETURN TRUE;
		ELSE
		   CREATE NEXTSIBLING OF OutputRoot.Properties AS hTTPReplyHeaderRef NAME 'HTTPReplyHeader';
		   CALL CopyMessageHeaders();
		   CALL copyCommonHeaderFromEnvironmentToHTTPReply(Environment, hTTPReplyHeaderRef);
		   SET hTTPReplyHeaderRef."Content-Type" = 'application/json';			
		
			CASE InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code" 
			WHEN 404 THEN
				CALL error(Environment,'Received Error Response:****** with HTTP Status Code '||CAST(InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code" AS CHARACTER)); 
				CALL sendHTTP503Response(Environment);
			ELSE 
				CALL sendHTTP500Response(Environment);
			END CASE;
			RETURN FALSE;
		END IF;		
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;	
END MODULE;	